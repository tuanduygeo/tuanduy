import streamlit as st

def run():
    ### 1.PHONG TH·ª¶Y ƒê·ªäA L√ù ‚Äì B·∫¢N ƒê·ªí ƒê·ªäA M·∫†CH
    """)
    
    # Kh·ªüi t·∫°o session state
    if "selected_idx" not in st.session_state:
        st.session_state.selected_idx = None
    # Th∆∞ m·ª•c ch·ª©a HTML
    html_dir = "dulieu"
    html_files = sorted([f for f in os.listdir(html_dir) if f.endswith(".html")])
    df = pd.DataFrame({"T√™n c√¥ng tr√¨nh": html_files})
    # Ph√¢n trang
    per_page = 10
    total_pages = math.ceil(len(df) / per_page)
    page = st.number_input(f"üìÑ Trang (1‚Äì{total_pages}):", min_value=1, max_value=total_pages, value=1, step=1)
    
    start_idx = (page - 1) * per_page
    end_idx = start_idx + per_page
    df_page = df.iloc[start_idx:end_idx]
    # Hi·ªÉn th·ªã danh s√°ch t·ª´ng trang
    for i, (_, row) in enumerate(df_page.iterrows()):
        idx = start_idx + i
        col1, col2 = st.columns([5, 1])
        with col1:
            st.markdown(f"üî∏ **{row['T√™n c√¥ng tr√¨nh']}**")
        with col2:
            if st.button("Xem", key=row['T√™n c√¥ng tr√¨nh']):
                st.session_state.selected_idx = idx
    
    
    
    
    # Hi·ªÉn th·ªã b·∫£n ƒë·ªì
    if "selected_idx" not in st.session_state:
        st.session_state.selected_idx = None
    
    # N·∫øu c√≥ danh s√°ch HTML
    if html_files:
        df = pd.DataFrame({"T√™n c√¥ng tr√¨nh": html_files})
    
        # N·∫øu ch∆∞a ch·ªçn g√¨ ‚Üí hi·ªÉn th·ªã m·∫∑c ƒë·ªãnh b·∫£n ƒë·ªì ƒë·∫ßu ti√™n
        if st.session_state.selected_idx is None:
            default_html = random.choice(html_files)
            html_path = os.path.join(html_dir, default_html)
            st.subheader(f"üìç B·∫£n ƒë·ªì m·∫∑c ƒë·ªãnh: {default_html}")
            with open(html_path, 'r', encoding='utf-8') as f:
                html_content = f.read()
                components.html(html_content, height=1100, scrolling=True)
    
        # N·∫øu ƒë√£ ch·ªçn ‚Üí hi·ªÉn th·ªã b·∫£n ƒë·ªì c√≥ n√∫t ti·∫øn l√πi
        else:
            selected_html = df.iloc[st.session_state.selected_idx]['T√™n c√¥ng tr√¨nh']
    
            col1, _, col3 = st.columns([1, 6, 1])
            with col1:
                if st.button("‚¨ÖÔ∏è L√πi") and st.session_state.selected_idx > 0:
                    st.session_state.selected_idx -= 1
                    st.rerun()
            with col3:
                if st.button("Ti·∫øn ‚û°Ô∏è") and st.session_state.selected_idx < len(df) - 1:
                    st.session_state.selected_idx += 1
                    st.rerun()
    
            st.markdown("---")
            st.subheader(f"üó∫Ô∏è B·∫£n ƒë·ªì: {selected_html}")
            html_path = os.path.join(html_dir, selected_html)
            with open(html_path, 'r', encoding='utf-8') as f:
                html_content = f.read()
                components.html(html_content, height=1100, scrolling=True)
    else:
        st.warning("Kh√¥ng t√¨m th·∫•y file HTML n√†o trong th∆∞ m·ª•c 'dulieu/'")
    
    st.markdown("""
    ### üìå H∆∞·ªõng d·∫´n
    - Danh s√°ch 200 c√¥ng tr√¨nh ƒë∆∞·ª£c th∆∞·ªùng xuy√™n thay ƒë·ªïi/ 4900 c√¥ng tr√¨nh t√¢m linh ƒë∆∞·ª£c t√°c gi·∫£ thu th·∫≠p t·∫°i Vi·ªát Nam.
    - C√¥ng ngh·ªá: ·ª®ng d·ª•ng c√¥ng ngh·ªá t·ª± ƒë·ªông h√≥a ƒë·ªãa kh√¥ng gian ƒë·ªÉ x√°c ƒë·ªãnh vector c√°c h∆∞·ªõng ƒë·ªãa m·∫°ch t·ª± ƒë·ªông t·∫°i c√°c c√¥ng tr√¨nh.
    - Phi√™n b·∫£n: V1.0 phi√™n b·∫£n web ∆∞u ti√™n s·ªë li·ªáu nh·∫π, vector h∆∞·ªõng m·∫°ch mang t√≠nh tham kh·∫£o- kh√¥ng ch√≠nh x√°c tuy·ªát ƒë·ªëi.
    - C√°ch d√πng: C√°c b·∫°n ch·ªçn trang ‚Üí B·∫•m `Xem` ‚Üí B·∫£n ƒë·ªì s·∫Ω hi·ªÉn th·ªã b√™n d∆∞·ªõi.
    """)
    # --- SCHUMANN RESONANCE ---
    
    st.markdown("""
